name: pylinting
run-name: Python linting merged or pull-requested code.
on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize

jobs:
  do_linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9 .
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - uses: actions/cache@v3
      id: spt-pip-dependencies-cache
      with:
        path: ./.venv/
        key: ${{ hashFiles('pyproject.toml') }}
    - name: Install dependencies if not cached.
      run: |
        python -m venv venv &&
        source ./venv/bin/activate &&
        python -m pip install --upgrade pip &&
        bash build/build_scripts/create_requirements.sh > requirements.txt &&
        bash build/build_scripts/create_requirements.sh all >> requirements.txt &&
        pip install -r requirements.txt &&
        pip install pylint &&
        deactivate
      if: steps.spt-pip-dependencies-cache.outputs.cache-hit != 'true'
    - name: Linting the Python source code.
      run: |
        pylint --output-format=colorized --rc-file .pylintrc spatialprofilingtoolbox/ | tee linter_output.txt
    - name: Upload linter results.
      uses: actions/upload-artifact@v3
      with:
        name: pylint-results
        path: linter_output.txt
      if: ${{ always() }}
