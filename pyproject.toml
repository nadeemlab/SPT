[build-system]
requires = [
    "setuptools>=63",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "spatialprofilingtoolbox"
version = "0.12.0"
authors = [
    { name = "James Mathews", email = "mathewj2@mskcc.org" }
]
description = "Toolbox for spatial analysis of single cell data."
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Science/Research"
]
requires-python = ">=3.9"
dependencies = [
    "psycopg2==2.9.3",
    "adiscstudies==0.10.10"
]

[project.urls]
documentation = "https://github.com/nadeemlab/SPT"
repository = "https://github.com/nadeemlab/SPT"

[project.optional-dependencies]
apiserver = [
    "fastapi>=0.68.0,<0.69.0",
    "uvicorn>=0.15.0,<0.16.0"
]
db = [
    "pandas>=1.1.5",
    "pyshp==2.2.0"
]
countsserver = []
cggnn = [
    "cg-gnn"
]
workflow = [
    "numpy==1.22.3",
    "scipy==1.8.0",
    "scikit-learn==1.1.2",
    "pyshp==2.2.0",
    "pandas>=1.1.5",
    "Jinja2==3.0.1",
    "tabulate==0.8.10"
]
building = [
    "Jinja2==3.0.1"
]
all = [
    "fastapi>=0.68.0,<0.69.0",
    "uvicorn>=0.15.0,<0.16.0",
    "Jinja2==3.0.1",
    "pandas>=1.1.5",
    "numpy==1.22.3",
    "scipy==1.8.0",
    "scikit-learn==1.1.2",
    "pyshp==2.2.0",
    "tabulate==0.8.10"
]
dev = [
    "autopep8",
    "mypy",
    "pylint",
    "pytest"
]

[project.scripts]
spt = "spatialprofilingtoolbox.entry_point.spt:main_program"
spt-enable-completion = "spatialprofilingtoolbox.entry_point.spt_enable_completion:main_program"

[tool.setuptools]
packages = [
    "spatialprofilingtoolbox",
    "spatialprofilingtoolbox.standalone_utilities",
    "spatialprofilingtoolbox.entry_point",
    "spatialprofilingtoolbox.apiserver",
    "spatialprofilingtoolbox.apiserver.app",
    "spatialprofilingtoolbox.apiserver.scripts",
    "spatialprofilingtoolbox.cggnn",
    "spatialprofilingtoolbox.cggnn.scripts",
    "spatialprofilingtoolbox.countsserver",
    "spatialprofilingtoolbox.countsserver.scripts",
    "spatialprofilingtoolbox.db",
    "spatialprofilingtoolbox.db.scripts",
    "spatialprofilingtoolbox.db.data_model",
    "spatialprofilingtoolbox.workflow",
    "spatialprofilingtoolbox.workflow.scripts",
    "spatialprofilingtoolbox.workflow.dataset_designs",
    "spatialprofilingtoolbox.workflow.dataset_designs.multiplexed_imaging",
    "spatialprofilingtoolbox.workflow.workflows",
    "spatialprofilingtoolbox.workflow.workflows.defaults",
    "spatialprofilingtoolbox.workflow.workflows.phenotype_proximity",
    "spatialprofilingtoolbox.workflow.workflows.front_proximity",
    "spatialprofilingtoolbox.workflow.workflows.density",
    "spatialprofilingtoolbox.workflow.workflows.nearest_distance",
    "spatialprofilingtoolbox.workflow.workflows.halo_import",
    "spatialprofilingtoolbox.workflow.common",
    "spatialprofilingtoolbox.workflow.common.logging",
    "spatialprofilingtoolbox.workflow.source_file_adi_parsing",
    "spatialprofilingtoolbox.workflow.templates"
]

[tool.setuptools.package-data]
"spatialprofilingtoolbox.entry_point" = ["spt-completion.sh.jinja"]
"spatialprofilingtoolbox.workflow.scripts" = [
    "aggregate-core-results.py",
    "core-job.py",
    "extract-compartments.py",
    "generate-run-information.py",
    "initialize.py",
    "merge-performance-reports.py",
    "merge-sqlite-dbs.py",
    "report-run-configuration.py",
    "configure.py",
    "report-on-logs.py"
]
"spatialprofilingtoolbox.workflow.workflows" = [
    "main.nf.jinja"
]
"spatialprofilingtoolbox.workflow.templates" = [
    "nextflow.config.jinja",
    "log_table.tex.jinja",
    "log_table.html.jinja",
    ".spt_db.config.template",
    "main.nf.jinja"
]
"spatialprofilingtoolbox.countsserver.scripts" = [
    "read-expression-dump-file.py",
    "cache-expressions-data-array.py",
    "start.py"
]
"spatialprofilingtoolbox.db.scripts" = [
    "create-schema.py",
    "modify-constraints.py",
    "guess-channels-from-object-files.py",
    "status.py",
    "retrieve-feature-matrices.py"
]
"spatialprofilingtoolbox.db.data_model" = [
    "create_roles.sql",
    "create_views.sql",
    "drop_views.sql",
    "fields.tsv",
    "grant_on_tables.sql",
    "performance_tweaks.sql",
    "refresh_views.sql"
]
"spatialprofilingtoolbox.cggnn.scripts" = [
    "run.py",
]
