[build-system]
requires = [
    "setuptools>=63",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "spatialprofilingtoolbox"
authors = [
    { name = "James Mathews", email = "mathewj2@mskcc.org" }
]
description = "Toolbox for spatial analysis of single cell data."
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Science/Research",
]
requires-python = ">=3.9"
dependencies = [
    "psycopg==3.1.19",
    "adiscstudies==0.11.0",
    "numba==0.59.1",
    "attrs==23.2.0",
]

[project.urls]
documentation = "https://github.com/nadeemlab/SPT"
repository = "https://github.com/nadeemlab/SPT"

[project.optional-dependencies]
apiserver = [
    "matplotlib==3.9.2",
    "fastapi==0.111.0",
    "uvicorn==0.30.0",
    "pandas==2.2.2",
    "scipy==1.13.1",
    "numpy==1.26.4",
    "pyshp==2.3.1",
    "scikit-learn==1.5.0",
    "Pillow==9.5.0",
    "pydantic==2.7.2",
    "secure==0.3.0",
    "zstandard==0.23.0",
]
graphs = [
    "bokeh==3.4.1",
    "h5py==3.10.0",
    "numpy==1.26.4",
    "scipy==1.13.1",
    "tables==3.9.2",
    "tqdm==4.66.4",
]
db = [
    "pandas==2.2.2",
    "pyshp==2.3.1",
    "pydantic==2.7.2",
    "squidpy==1.5.0",
]
ondemand = [
    "pandas==2.2.2",
    "numpy==1.26.4",
    "scikit-learn==1.5.0",
    "pyshp==2.3.1",
    "pydantic==2.7.2",
    "squidpy==1.5.0",
    "Brotli==1.1.0",
    "zstandard==0.23.0",
]
workflow = [
    "matplotlib==3.9.2",
    "umap-learn==0.5.6",
    "numpy==1.26.4",
    "scipy==1.13.1",
    "scikit-learn==1.5.0",
    "pyshp==2.3.1",
    "pydantic==2.7.2",
    "pandas==2.2.2",
    "Jinja2==3.1.4",
    "tabulate==0.9.0",
    "Pillow==9.5.0",
    "tables==3.9.2",
    "boto3==1.35.23",
]
all = [
    "bokeh==3.4.1",
    "h5py==3.10.0",
    "matplotlib==3.9.2",
    "umap-learn==0.5.6",
    "uvicorn==0.30.0",
    "Jinja2==3.1.4",
    "pandas==2.2.2",
    "numpy==1.26.4",
    "scipy==1.13.1",
    "scikit-learn==1.5.0",
    "pyshp==2.3.1",
    "tabulate==0.9.0",
    "pydantic==2.7.2",
    "fastapi==0.111.0",
    "Pillow==9.5.0",
    "squidpy==1.5.0",
    "secure==0.3.0",
    "tables==3.9.2",
    "tqdm==4.66.4",
    "boto3==1.35.23",
    "Brotli==1.1.0",
    "zstandard==0.23.0",
]
dev = [
    "autopep8",
    "mypy",
    "pylint",
    "pytest",
]

[project.scripts]
spt = "spatialprofilingtoolbox.entry_point.cli:main_program"
spt-enable-completion = "spatialprofilingtoolbox.entry_point.spt_enable_completion:main_program"

[tool.setuptools]
packages = [
    "spatialprofilingtoolbox",
    "spatialprofilingtoolbox.standalone_utilities",
    "spatialprofilingtoolbox.entry_point",
    "spatialprofilingtoolbox.apiserver",
    "spatialprofilingtoolbox.apiserver.app",
    "spatialprofilingtoolbox.apiserver.scripts",
    "spatialprofilingtoolbox.graphs",
    "spatialprofilingtoolbox.graphs.scripts",
    "spatialprofilingtoolbox.ondemand",
    "spatialprofilingtoolbox.ondemand.providers",
    "spatialprofilingtoolbox.ondemand.scripts",
    "spatialprofilingtoolbox.db",
    "spatialprofilingtoolbox.db.accessors",
    "spatialprofilingtoolbox.db.exchange_data_formats",
    "spatialprofilingtoolbox.db.scripts",
    "spatialprofilingtoolbox.db.data_model",
    "spatialprofilingtoolbox.workflow",
    "spatialprofilingtoolbox.workflow.scripts",
    "spatialprofilingtoolbox.workflow.component_interfaces",
    "spatialprofilingtoolbox.workflow.graph_generation",
    "spatialprofilingtoolbox.workflow.graph_plugin",
    "spatialprofilingtoolbox.workflow.tabular_import",
    "spatialprofilingtoolbox.workflow.tabular_import.parsing",
    "spatialprofilingtoolbox.workflow.common",
    "spatialprofilingtoolbox.workflow.common.logging",
    "spatialprofilingtoolbox.workflow.assets",
]

[tool.setuptools.package-data]
"spatialprofilingtoolbox" = ["py.typed"]
"spatialprofilingtoolbox.entry_point" = ["spt-completion.sh.jinja"]
"spatialprofilingtoolbox.workflow.scripts" = [
    "aggregate_core_results.py",
    "core_job.py",
    "extract_compartments.py",
    "generate_run_information.py",
    "initialize.py",
    "merge_performance_reports.py",
    "merge_sqlite_dbs.py",
    "report_run_configuration.py",
    "configure.py",
    "report_on_logs.py",
    "tail_logs.py",
]
"spatialprofilingtoolbox.workflow.assets" = [
    ".spt_db.config.template",
    ".workflow.config.template",
    "log_table.tex.jinja",
    "log_table.html.jinja",
    "main_visitor.nf",
    "nextflow.config.jinja",
]
"spatialprofilingtoolbox.workflow.graph_generation" = [
    "graph_generation.nf",
    "main.nf",
]
"spatialprofilingtoolbox.workflow.graph_plugin" = ["main.nf"]
"spatialprofilingtoolbox.workflow.tabular_import" = ["main.nf"]
"spatialprofilingtoolbox.apiserver.scripts" = [
    "dump_schema.py",
]
"spatialprofilingtoolbox.ondemand.scripts" = [
    "read_expression_dump_file.py",
    "cache_expressions_data_array.py",
    "start.py",
]
"spatialprofilingtoolbox.db.scripts" = [
    "create_schema.py",
    "guess_channels_from_object_files.py",
    "status.py",
    "retrieve_feature_matrices.py",
    "drop.py",
    "drop_ondemand_computations.py",
    "delete_feature.py",
    "upload_sync_small.py",
    "collection.py",
    "interactive_uploader.py",
    "load_query.py",
]
"spatialprofilingtoolbox.db.data_model" = [
    "metaschema.sql",
    "drop_metaschema.sql",
    "create_roles.sql",
    "create_views.sql",
    "drop_views.sql",
    "load_query.sql",
    "load_query_breakdown.sql",
    "fields.tsv",
    "grant_on_tables.sql",
    "performance_tweaks.sql",
    "refresh_views.sql",
    "feature_descriptions.tsv",
]
"spatialprofilingtoolbox.graphs.scripts" = [
    "create_specimen_graphs.py",
    "explore_classes.py",
    "extract.py",
    "finalize_graphs.py",
    "generate_graphs.py",
    "plot_importance_fractions.py",
    "plot_interactives.py",
    "prepare_graph_creation.py",
    "upload_importances.py",
]
